import { ExtendedContext } from "../types";
import { InlineKeyboard } from "grammy";

async function sendAdminMenu(
    ctx: ExtendedContext,
    option: "create" | "edit" = "create"
) {
    const session = ctx.session;
    session.adminStep = "admin_menu";
    const botMessage = `
<b>‚ú® –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>
–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–∞–∑–¥–µ–ª—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö:
    `;
    const adminMenuKeyboard = new InlineKeyboard()
        .text("üõçÔ∏è –¢–æ–≤–∞—Ä—ã", "admin_products")
        .text("üèôÔ∏è –ì–æ—Ä–æ–¥–∞", "admin_cities")
        .row()
        .text("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", "admin_config")
        .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "menu");

    if (option === "edit") {
        return await ctx.editMessageText(botMessage, {
            reply_markup: adminMenuKeyboard,
            parse_mode: "HTML",
        });
    }

    return await ctx.reply(botMessage, {
        reply_markup: adminMenuKeyboard,
        parse_mode: "HTML",
    });
}

export default sendAdminMenu;
